#!/bin/bash
set -euo pipefail

for branch in $(git branch --list | sed 's/^..//'); do
    echo "Switching to branch $branch... tch ( －‸－)ノ"
    git checkout "$branch"

    files=$(find . -mindepth 2 -maxdepth 2 -name main.py)

    if [ -z "$files" ]; then
        echo "Ugh, no main.py files found in $branch... useless. (¬_¬ )"
        continue
    fi

    while IFS= read -r file; do
        echo "Fixing $file... I-I'm not nervous or anything! (〃＞＿＜;〃)"

        # Save current permissions
        mode=$(stat -c "%a" "$file")

        # Create modified temp version
        awk '
        {
            lines[NR] = $0
            if ($0 ~ /random\.seed\(.*\)/) {
                # Strip leading spaces/tabs from seed line (tidy it up, sheesh!)
                sub(/^[ \t]+/, "", $0)
                seedline = $0
                seed_index = NR
            }
            if (first_problem == 0 && $0 ~ /p = Problem\(/) {
                problem_line = NR
                first_problem = 1
            }
        }
        END {
            for (i = 1; i <= NR; i++) {
                if (i == seed_index) {
                    # skip original seed
                    continue
                }
                if (i == problem_line && seedline != "") {
                    print seedline
                }
                print lines[i]
            }
        }
        ' "$file" > "$file.tmp"

        # Show the diff
        echo "Here's what I did to $file... y-you better check it! (//ω//)"
        diff --color -U 5 "$file" "$file.tmp" || true

        # Ask for confirmation
        echo -n "Apply this change and commit? [y/N]: "
        read confirm < /dev/tty
        if [[ "$confirm" =~ ^[Yy]$ ]]; then
            mv -f "$file.tmp" "$file"
            chmod "$mode" "$file"
            git commit -am "[auto generated by seed_script.sh]: seed stuff"
            echo "Committed. D-don’t make it weird! (⁄ ⁄>⁄ω⁄<⁄ ⁄)"
        else
            echo "Skipped $file. Hmph, your loss... (¬_¬ )"
            rm -f "$file.tmp"
        fi
    done <<< "$files"
done
